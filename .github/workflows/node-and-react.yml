name: React and Node.js CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Nodejs
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package.json
    - name: Install dependencies
      run: npm ci
    - name: Run test
      run: npm test
    - name: Build React app
      run: npm run build
      

  build-and-test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Setup Node js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package.json   
    - name: Install dependencies
      run: npm ci
    - name: Run tests
      run: npm test

  deploy-frontend:
    needs: build-and-test-frontend
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v4
    - name: deploy to vercel 
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend

  deploy-backend:
    needs: build-and-test-backend
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Render CLI
      run: curl -L https://render.com/cli/install.sh | bash
    - name: Deploy to Render
      run: render deploy
      env:
        RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
